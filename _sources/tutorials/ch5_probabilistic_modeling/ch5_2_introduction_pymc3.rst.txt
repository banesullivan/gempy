.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_tutorials_ch5_probabilistic_modeling_ch5_2_introduction_pymc3.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_tutorials_ch5_probabilistic_modeling_ch5_2_introduction_pymc3.py:


5 2 - Introduction PyMC3.
=========================


.. code-block:: python3


    # Importing GemPy
    import gempy as gp

    # Importing auxiliary libraries
    import os
    import numpy as np
    import matplotlib.pyplot as plt
    import pymc3 as pm
    import arviz as az

    from gempy.bayesian import plot_posterior as pp
    from importlib import reload
    from matplotlib.ticker import StrMethodFormatter








Model definition
----------------


This is to make it work in sphinx gallery


.. code-block:: python3

    cwd = os.getcwd()
    if not 'examples' in cwd:
        path_dir = os.getcwd()+'/examples/tutorials/ch5_probabilistic_modeling'
    else:
        path_dir = cwd









.. code-block:: python3

    geo_model = gp.load_model(r'/2-layers', path=path_dir, recompile=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Active grids: ['regular']
    Active grids: ['regular' 'topography']
    Setting kriging parameters to their default values.
    Compiling theano function...
    Level of Optimization:  fast_compile
    Device:  cpu
    Precision:  float64
    Number of faults:  0
    Compilation Done!
    Kriging values: 
                       values
    range            1.3e+04
    $C_o$            4.2e+06
    drift equations      [3]





.. code-block:: python3

    geo_model.modify_surface_points(2, Z=1000)
    gp.compute_model(geo_model)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none



    Lithology ids 
      [3. 3. 3. ... 1. 1. 1.] 





.. code-block:: python3


    def plot_geo_setting_well():
        device_loc = np.array([[6e3, 0, 3700]])
        p2d = gp.plot_2d(geo_model, show_topography=True, legend=False)

        well_1 = 3.41e3
        well_2 = 3.6e3
        p2d.axes[0].scatter([3e3], [well_1], marker='^', s=400, c='#71a4b3', zorder=10)
        p2d.axes[0].scatter([9e3], [well_2], marker='^', s=400, c='#71a4b3', zorder=10)
        p2d.axes[0].scatter(device_loc[:, 0], device_loc[:, 2], marker='x', s=400, c='#DA8886', zorder=10)

        p2d.axes[0].vlines(3e3, .5e3, well_1, linewidth=4, color='gray')
        p2d.axes[0].vlines(9e3, .5e3, well_2, linewidth=4, color='gray')
        p2d.axes[0].vlines(3e3, .5e3, well_1)
        p2d.axes[0].vlines(9e3, .5e3, well_2)
        p2d.axes[0].set_xlim(2900, 3100)
        plt.savefig('well.svg')
        plt.show()










.. code-block:: python3

    plot_geo_setting_well()

    # Thickness measurements
    # ----------------------




.. image:: /tutorials/ch5_probabilistic_modeling/images/sphx_glr_ch5_2_introduction_pymc3_001.png
    :alt: Cell Number: mid Direction: y
    :class: sphx-glr-single-img






.. code-block:: python3

    y_obs = [2.12]
    y_obs_list = [2.12, 2.06, 2.08, 2.05, 2.08, 2.09,
                  2.19, 2.07, 2.16, 2.11, 2.13, 1.92]
    np.random.seed(4003)








Normal-several points
~~~~~~~~~~~~~~~~~~~~~
.. image:: /../../_static/computational_graph1.png



.. code-block:: python3

    with pm.Model() as model:
        mu = pm.Normal('$\mu$', 2.08, .07)
        sigma = pm.Gamma('$\sigma$', 0.3, 3)
        y = pm.Normal('$y$', mu, sigma, observed=y_obs_list)









.. code-block:: python3

    mu





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    $\mu$




.. code-block:: python3

    sigma





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    $\sigma$




.. code-block:: python3

    y






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    $y$



Sampling
--------



.. code-block:: python3

    with model:
        prior = pm.sample_prior_predictive(1000)
        trace = pm.sample(1000, discard_tuned_samples=False, cores=1)
        post = pm.sample_posterior_predictive(trace)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Auto-assigning NUTS sampler...
    Initializing NUTS using jitter+adapt_diag...
    Sequential sampling (2 chains in 1 job)
    NUTS: [$\sigma$, $\mu$]
    Sampling chain 0, 0 divergences:   0%|          | 0/1500 [00:00<?, ?it/s]    Sampling chain 0, 0 divergences:   3%|2         | 40/1500 [00:00<00:03, 372.13it/s]    Sampling chain 0, 0 divergences:   4%|4         | 66/1500 [00:00<00:04, 328.67it/s]    Sampling chain 0, 0 divergences:   8%|7         | 113/1500 [00:00<00:03, 360.11it/s]    Sampling chain 0, 0 divergences:  12%|#2        | 182/1500 [00:00<00:03, 418.77it/s]    Sampling chain 0, 0 divergences:  18%|#8        | 274/1500 [00:00<00:02, 500.35it/s]    Sampling chain 0, 0 divergences:  26%|##5       | 388/1500 [00:00<00:01, 601.00it/s]    Sampling chain 0, 0 divergences:  34%|###3      | 505/1500 [00:00<00:01, 703.33it/s]    Sampling chain 0, 0 divergences:  42%|####2     | 631/1500 [00:00<00:01, 810.00it/s]    Sampling chain 0, 0 divergences:  51%|#####     | 762/1500 [00:00<00:00, 913.31it/s]    Sampling chain 0, 0 divergences:  59%|#####9    | 890/1500 [00:01<00:00, 998.75it/s]    Sampling chain 0, 0 divergences:  68%|######7   | 1018/1500 [00:01<00:00, 1068.15it/s]    Sampling chain 0, 0 divergences:  76%|#######6  | 1147/1500 [00:01<00:00, 1125.37it/s]    Sampling chain 0, 0 divergences:  85%|########5 | 1275/1500 [00:01<00:00, 1167.57it/s]    Sampling chain 0, 0 divergences:  93%|#########3| 1398/1500 [00:01<00:00, 1178.02it/s]    Sampling chain 0, 0 divergences: 100%|##########| 1500/1500 [00:01<00:00, 1002.84it/s]
    Sampling chain 1, 0 divergences:   0%|          | 0/1500 [00:00<?, ?it/s]    Sampling chain 1, 0 divergences:   6%|6         | 97/1500 [00:00<00:01, 965.40it/s]    Sampling chain 1, 0 divergences:  14%|#4        | 211/1500 [00:00<00:01, 1009.82it/s]    Sampling chain 1, 0 divergences:  22%|##2       | 336/1500 [00:00<00:01, 1070.84it/s]    Sampling chain 1, 0 divergences:  30%|###       | 450/1500 [00:00<00:00, 1090.23it/s]    Sampling chain 1, 0 divergences:  39%|###8      | 582/1500 [00:00<00:00, 1149.33it/s]    Sampling chain 1, 0 divergences:  47%|####6     | 705/1500 [00:00<00:00, 1170.22it/s]    Sampling chain 1, 0 divergences:  56%|#####6    | 842/1500 [00:00<00:00, 1222.17it/s]    Sampling chain 1, 0 divergences:  65%|######5   | 978/1500 [00:00<00:00, 1259.79it/s]    Sampling chain 1, 0 divergences:  74%|#######4  | 1117/1500 [00:00<00:00, 1295.40it/s]    Sampling chain 1, 0 divergences:  83%|########3 | 1246/1500 [00:01<00:00, 1293.34it/s]    Sampling chain 1, 0 divergences:  92%|#########1| 1377/1500 [00:01<00:00, 1297.11it/s]    Sampling chain 1, 0 divergences: 100%|##########| 1500/1500 [00:01<00:00, 1249.99it/s]
      0%|          | 0/3000 [00:00<?, ?it/s]      4%|4         | 134/3000 [00:00<00:02, 1339.66it/s]      9%|9         | 279/3000 [00:00<00:01, 1370.57it/s]     14%|#4        | 428/3000 [00:00<00:01, 1402.02it/s]     19%|#9        | 576/3000 [00:00<00:01, 1421.66it/s]     24%|##4       | 724/3000 [00:00<00:01, 1436.80it/s]     29%|##9       | 872/3000 [00:00<00:01, 1446.64it/s]     34%|###3      | 1019/3000 [00:00<00:01, 1453.50it/s]     39%|###8      | 1167/3000 [00:00<00:01, 1458.64it/s]     44%|####3     | 1312/3000 [00:00<00:01, 1454.64it/s]     49%|####8     | 1459/3000 [00:01<00:01, 1458.87it/s]     54%|#####3    | 1607/3000 [00:01<00:00, 1464.86it/s]     59%|#####8    | 1756/3000 [00:01<00:00, 1470.90it/s]     64%|######3   | 1906/3000 [00:01<00:00, 1477.05it/s]     68%|######8   | 2055/3000 [00:01<00:00, 1479.68it/s]     73%|#######3  | 2204/3000 [00:01<00:00, 1480.27it/s]     78%|#######8  | 2352/3000 [00:01<00:00, 1480.16it/s]     83%|########3 | 2502/3000 [00:01<00:00, 1485.23it/s]     88%|########8 | 2651/3000 [00:01<00:00, 1486.54it/s]     93%|#########3| 2800/3000 [00:01<00:00, 1480.91it/s]     98%|#########8| 2948/3000 [00:02<00:00, 1471.63it/s]    100%|##########| 3000/3000 [00:02<00:00, 1467.09it/s]





.. code-block:: python3


    data = az.from_pymc3(trace=trace,
                         prior=prior,
                         posterior_predictive=post)









.. code-block:: python3

    az.plot_trace(data)
    plt.show()




.. image:: /tutorials/ch5_probabilistic_modeling/images/sphx_glr_ch5_2_introduction_pymc3_002.png
    :alt: $\mu$, $\mu$, $\sigma$, $\sigma$
    :class: sphx-glr-single-img





Raw observations:
^^^^^^^^^^^^^^^^^



.. code-block:: python3


    reload(pp)
    p = pp.PlotPosterior(data)
    p.create_figure(figsize=(9, 3), joyplot=False, marginal=False)
    p.plot_normal_likelihood('$\mu$', '$\sigma$', '$y$', iteration=-1, hide_bell=True)
    p.likelihood_axes.set_xlim(1.90, 2.2)
    p.likelihood_axes.xaxis.set_major_formatter(StrMethodFormatter('{x:,.2f}'))
    for tick in p.likelihood_axes.get_xticklabels():
        tick.set_rotation(45)
    plt.show()




.. image:: /tutorials/ch5_probabilistic_modeling/images/sphx_glr_ch5_2_introduction_pymc3_003.png
    :alt: Likelihood
    :class: sphx-glr-single-img





Final inference
^^^^^^^^^^^^^^^



.. code-block:: python3


    reload(pp)
    p = pp.PlotPosterior(data)
    p.create_figure(figsize=(9, 3), joyplot=False, marginal=False)
    p.plot_normal_likelihood('$\mu$', '$\sigma$', '$y$', iteration=-1, hide_lines=True)
    p.likelihood_axes.set_xlim(1.70, 2.40)
    p.likelihood_axes.xaxis.set_major_formatter(StrMethodFormatter('{x:,.2f}'))
    for tick in p.likelihood_axes.get_xticklabels():
        tick.set_rotation(45)
    plt.show()




.. image:: /tutorials/ch5_probabilistic_modeling/images/sphx_glr_ch5_2_introduction_pymc3_004.png
    :alt: Likelihood
    :class: sphx-glr-single-img





Joyplot
~~~~~~~


%matplotlib inline


.. code-block:: python3

    reload(pp)
    p = pp.PlotPosterior(data)

    p.create_figure(figsize=(9, 9), joyplot=True, marginal=False, likelihood=False, n_samples=31)
    p.plot_joy(('$\mu$', '$\sigma$'), '$y$', iteration=14)
    plt.show()




.. image:: /tutorials/ch5_probabilistic_modeling/images/sphx_glr_ch5_2_introduction_pymc3_005.png
    :alt: ch5 2 introduction pymc3
    :class: sphx-glr-single-img





Join probability
~~~~~~~~~~~~~~~~


sphinx_gallery_thumbnail_number = 6


.. code-block:: python3

    reload(pp)
    p = pp.PlotPosterior(data)

    p.create_figure(figsize=(9, 5), joyplot=False, marginal=True, likelihood=True)
    p.plot_marginal(var_names=['$\mu$', '$\sigma$'],
                    plot_trace=False, credible_interval=.93, kind='kde')

    p.plot_normal_likelihood('$\mu$', '$\sigma$', '$y$', iteration=-1, hide_lines=True)
    p.likelihood_axes.set_xlim(1.70, 2.40)
    plt.show()




.. image:: /tutorials/ch5_probabilistic_modeling/images/sphx_glr_ch5_2_introduction_pymc3_006.png
    :alt: Likelihood
    :class: sphx-glr-single-img





Full plot
~~~~~~~~~



.. code-block:: python3

    reload(pp)
    p = pp.PlotPosterior(data)

    p.create_figure(figsize=(9, 5), joyplot=True, marginal=True, likelihood=True, n_samples=11)

    p.plot_posterior(['$\mu$', '$\sigma$'], ['$\mu$', '$\sigma$'], '$y$', 1000,
                     marginal_kwargs={'plot_trace': False, 'credible_interval': .93, 'kind': 'kde'})
    plt.show()


.. image:: /tutorials/ch5_probabilistic_modeling/images/sphx_glr_ch5_2_introduction_pymc3_007.png
    :alt: Likelihood
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  46.841 seconds)


.. _sphx_glr_download_tutorials_ch5_probabilistic_modeling_ch5_2_introduction_pymc3.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: ch5_2_introduction_pymc3.py <ch5_2_introduction_pymc3.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: ch5_2_introduction_pymc3.ipynb <ch5_2_introduction_pymc3.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
